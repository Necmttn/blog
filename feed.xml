<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>marknotfound | the blog</title>
  <subtitle>Thoughts from Mark on whatever his brain is currently obsessing over. Usually tech, running, and photography.</subtitle>
  <link href="https://marknotfound.com/feed.xml" rel="self"/>
  <link href="https://marknotfound.com/"/>
  <updated>2023-05-22T00:00:00Z</updated>
  <id>https://marknotfound.com/</id>
  <author>
    <name>Mark Evans</name>
    <email>mark@meltdownlabs.com</email>
  </author>
  
  <entry>
    <title>Enter the ~Blogosphere~</title>
    <link href="https://marknotfound.com/posts/enter-the-blogosphere/"/>
    <updated>2021-04-24T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/enter-the-blogosphere/</id>
    <content type="html">&lt;p&gt;I&#39;ve got hobbies and dang it I&#39;m gonna write about &#39;em. Since the pandemic began, I&#39;ve gotten into all sorts of weird shit that I never thought I&#39;d be into. Running, blockchain tech, impromptu road trips, and now blogging. You&#39;re gonna hear about all of it here, but first let&#39;s do the obligatory &amp;quot;blog tech&amp;quot; post.&lt;/p&gt;
&lt;h5&gt;Open Source&lt;/h5&gt;
&lt;p&gt;It&#39;s all open source. &lt;a href=&quot;https://github.com/marknotfound/blog&quot;&gt;View the repository on GitHub.&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Hosting&lt;/h5&gt;
&lt;p&gt;This blog is hosted by &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; because I didn&#39;t want to pay for EC2 or set up a kubernetes cluster. I don&#39;t hate myself enough for that.&lt;/p&gt;
&lt;h5&gt;Static Site Generator&lt;/h5&gt;
&lt;p&gt;I&#39;m running &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy&lt;/a&gt; for the whole shebang. Templates are written in &lt;a href=&quot;https://mozilla.github.io/nunjucks/&quot;&gt;Nunjucks&lt;/a&gt; which, to be honest, I don&#39;t care for much as a templating language, but it&#39;s the default for Eleventy and I wanted to start simple. It&#39;s growing on me a little as I use it more.&lt;/p&gt;
&lt;p&gt;Posts are written in markdown. This is good because it will force me to use markdown and eventually I&#39;ll memorize the syntax for inserting an image.&lt;/p&gt;
&lt;p&gt;Eleventy itself has been pretty cool. It was recommended to me last year by my old colleague &lt;a href=&quot;https://twitter.com/kai_cataldo&quot;&gt;Kai&lt;/a&gt;. I haven&#39;t dove too deep in yet, but the community seems nice and there are plenty of plugins for more advanced features like RSS and such. The last SSG I used was Jekyll, but I was never a fan of Ruby and it never &amp;quot;felt good&amp;quot; to me.&lt;/p&gt;
&lt;p&gt;The biggest gotcha with Eleventy for me was the &lt;a href=&quot;https://www.11ty.dev/docs/dates/#dates-off-by-one-day&quot;&gt;dates being off by one day&lt;/a&gt;. I solved this by fudging the local time and offsetting it by the UTC offset:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;readableDate&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; offsetSeconds &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getTimezoneOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; utcTimestamp &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; offsetSeconds&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; utcDate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;utcTimestamp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;utcDate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;EEEE MMMM d, yyyy&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is almost definitely a &amp;quot;better&amp;quot; way to do this. Oh, and the syntax highlighting? &lt;a href=&quot;https://www.11ty.dev/docs/plugins/syntaxhighlight/&quot;&gt;There&#39;s a plugin for that&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Styling&lt;/h5&gt;
&lt;p&gt;I am using &lt;a href=&quot;http://getskeleton.com/&quot;&gt;Skeleton&lt;/a&gt; for the boilerplate and responsiveness. It&#39;s simple, lightweight, and works but is no longer maintained as far as I can tell. I do some &lt;a href=&quot;https://github.com/marknotfound/blog/blob/master/src/css/index.css&quot;&gt;very minor overrides&lt;/a&gt; in plain old CSS, but it&#39;s mostly Skeleton. Dig those light blue links.&lt;/p&gt;
&lt;h5&gt;Icons&lt;/h5&gt;
&lt;p&gt;Icons are open source from &lt;a href=&quot;https://feathericons.com/&quot;&gt;Feather Icons&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Build &amp;amp; Deploy&lt;/h5&gt;
&lt;p&gt;The build and deploy process is automated &lt;a href=&quot;https://github.com/marknotfound/blog/blob/master/.github/workflows/eleventy_build.yml&quot;&gt;using GitHub Actions&lt;/a&gt; and once again I am standing on the shoulders of a great community. I followed &lt;a href=&quot;https://www.linkedin.com/pulse/eleventy-github-pages-lea-tortay/&quot;&gt;this guide on LinkedIn&lt;/a&gt; from &lt;a href=&quot;https://github.com/lea37&quot;&gt;Léa Tortay&lt;/a&gt; to get it set up. Thanks Léa!&lt;/p&gt;
&lt;h5&gt;Analytics&lt;/h5&gt;
&lt;p&gt;Because I want to know if anybody is actually reading this and I don&#39;t want to sacrifice anyone&#39;s privacy for my own selfish curiosity, I am using &lt;a href=&quot;https://cronitor.io/&quot;&gt;Cronitor&lt;/a&gt; (formerly &lt;a href=&quot;https://panelbear.com/&quot;&gt;Panelbear&lt;/a&gt;) for analytics. It&#39;s privacy focused and doesn&#39;t use tracking cookies or garbage like that. It&#39;s created by &lt;a href=&quot;https://anthonynsimon.com/&quot;&gt;Anthony Simon&lt;/a&gt; who I learned about via their very very good blog post &lt;a href=&quot;https://anthonynsimon.com/blog/one-man-saas-architecture/&quot;&gt;The Architecture Behind A One-Person Tech Startup&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Changelog&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;2021-05-12&lt;/strong&gt; Added citation for icon library. Noted Skeleton is no longer maintained.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Running is kinda hard</title>
    <link href="https://marknotfound.com/posts/running-is-kinda-hard/"/>
    <updated>2021-04-27T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/running-is-kinda-hard/</id>
    <content type="html">&lt;p&gt;In elementary school gym class they used to make us run a half mile from the middle of a big field around a baseball field backstop, then around a tree stump some distance away and back again. It wasn&#39;t fun and I was miserable every time we did it and I&#39;ve hated running since. I&#39;ve always been more of a wheels guy — skateboarding, biking, and roller/ice hockey.&lt;/p&gt;
&lt;p&gt;For whatever reason, I started running at the beginning of March 2021 - a year into the pandemic. Some part of me realized if I don&#39;t make a choice to be healthier, I&#39;d just always feel like garbage. I turned 30 this year and don&#39;t want to get old and fat. I want to be able to run around and play with my nieces for years to come. So I set a goal of a sub-30 minute 5K. Runner friends told me that would be a good milestone to work toward. I hit that goal in just 8 weeks following a training program on my Garmin watch.&lt;/p&gt;
&lt;p&gt;For context, I wasn&#39;t a fit guy at the start of this (and still am not). I&#39;m 5&#39;11&amp;quot; and was about 204 lbs when I started running. Below is a timeline of what it was like going from nothing to 5K and beyond.&lt;/p&gt;
&lt;h5&gt;Garmin Coach&lt;/h5&gt;
&lt;p&gt;Because I have a Garmin Instinct watch that I got for hiking a couple years ago, I&#39;m using the &lt;a href=&quot;https://connect.garmin.com/features/coach/&quot;&gt;Garmin Coach 5K plan with Coach Jeff Galloway&lt;/a&gt;. It&#39;s a 14 week plan with drills and it adjusts the workouts based on the progress you&#39;re making. At the time of writing this, I&#39;m on week 9.&lt;/p&gt;
&lt;h5&gt;First Run - March 8, 2021&lt;/h5&gt;
&lt;img class=&quot;post-image&quot; src=&quot;https://marknotfound.com/img/posts/running/benchmark-run.jpg&quot; /&gt;
&lt;p&gt;This was the training program&#39;s benchmark run on which the plan bases the rest of your workouts. The workout was to warmup/walk for 2 minutes, run best as possible for 5 minutes, and then cool down (walk) for 2 minutes. I got about half a mile in 10 minutes 52 seconds (nearly 20 minute/mile pace) with a combination of walking and running. I walked a lot and remember being unsure if this was going to stick.&lt;/p&gt;
&lt;h5&gt;Third Run - March 12, 2021&lt;/h5&gt;
&lt;p&gt;The goal for this workout was 5 minute walking warmup, followed by 1.5 miles run/walk/run. Run/walk/run is what it sounds like - you just run, walking as needed to catch your breath. I did 2.3 miles in about 32 minutes with an almost 14 minute/mile average pace. I remember these earlier runs being really hard and being pretty proud of hitting 2 miles on just my third run.&lt;/p&gt;
&lt;h5&gt;My Bones Hurt&lt;/h5&gt;
&lt;p&gt;The first couple weeks, my body wasn&#39;t used to the impact of running. My knees, ankles, and feet were not fully recovering before the next run. They weren&#39;t killing me though and I deemed the pain to be a &amp;quot;normal amount&amp;quot; so I powered through. After maybe the second or third week my body adjusted and I would recover in a day, just in time for the next run. Now, 9 weeks in I&#39;m not sore at all (which means I need to start pushing myself further again).&lt;/p&gt;
&lt;h5&gt;First 5K - March 17, 2021&lt;/h5&gt;
&lt;p&gt;I hit 3.1+ miles on my 5th run with combo of walking and running. It was cool, but I wasn&#39;t very happy with it because I&#39;d walked so much. 3.5 miles in 40 minutes, average pace 11:15. In hindsight, this was a milestone and I should be less hard on myself. Just needed to get my pace a minute fifteen faster to hit my first goal.&lt;/p&gt;
&lt;h5&gt;Cheat Code for Asthmatics&lt;/h5&gt;
&lt;p&gt;I realized around this time that if I took a couple hits of my inhaler before a run, I&#39;d have more endurance because I guess I was breathing more efficiently. Just a little tip for the other wheezers out there.&lt;/p&gt;
&lt;h5&gt;Personal Bests - April 2, 2021&lt;/h5&gt;
&lt;p&gt;Broke my personal best distance here which I remember feeling great. Man I wish I&#39;d been writing this stuff down while it was happening. 4.58 miles in 53 minutes 54 seconds with an 11:47 pace. Slow pace for sure, but the longest run by a mile so far!&lt;/p&gt;
&lt;h5&gt;First 10K - April 16, 2021&lt;/h5&gt;
&lt;img class=&quot;post-image&quot; src=&quot;https://marknotfound.com/img/posts/running/10k-run.jpg&quot; /&gt;
&lt;p&gt;Exactly two weeks after feeling like 4.58 miles was an eternity, I broke my distance record again with a 10K running 6.57 miles in 1 hour 11 minutes 4 seconds at a pace of 10:48. I also set my best 5K time here at 31 minutes 4 seconds! Getting real close to the actual goal here (5k &amp;lt; 30 minutes)! I think I experienced my first actual runner&#39;s high after this one. I cried for like 30 minutes afterwards and couldn&#39;t understand why. Felt good though!&lt;/p&gt;
&lt;h5&gt;Blaze It - April 20, 2021&lt;/h5&gt;
&lt;img class=&quot;post-image&quot; src=&quot;https://marknotfound.com/img/posts/running/30min-5k.jpg&quot; /&gt;
&lt;p&gt;I ran 5K in 29 minutes 53 seconds hitting my goal with a pace of 9:57! Hell yeah!!! This felt good, but not as good as the 10K which... scares me because now I fear I&#39;m going to start craving longer distances to chase that high.&lt;/p&gt;
&lt;h5&gt;Weight Loss&lt;/h5&gt;
&lt;p&gt;Something about exercising regularly (which I&#39;ve not been accustomed to) makes you want to eat better so you don&#39;t feel like you&#39;re wasting your effort. I still eat trash once or twice a week, but on average I&#39;m eating much healthier and as a result of the exercise/diet have lost about 7 lbs.&lt;/p&gt;
&lt;h5&gt;Next Goals - Current&lt;/h5&gt;
&lt;p&gt;I&#39;m hitting a 5K distance at least 3 days a week now. It&#39;s just my go-to run distance. I think I&#39;m going to keep training to work up to a half marathon next. I&#39;m doing another 10K this Friday, April 30th. I&#39;m not worried so much about beating my time since 10K doesn&#39;t feel &amp;quot;comfortable&amp;quot; yet, but it would be nice.&lt;/p&gt;
&lt;p&gt;I&#39;m learning a lot about hydration and food as fuel. For example I learned the hard way that you can over hydrate before a run and then have cramps and be in pain for three and a half miles. Similarly, you shouldn&#39;t eat Taco Bell before a run - with any amount of buffer. I thought 4 hours would be enough time, but the gordita burps said otherwise.&lt;/p&gt;
&lt;p&gt;Will definitely be posting more about running and specific bits of it now that this catch-up post is done. Still not sure if I &amp;quot;like&amp;quot; running, but I do like the feeling of personal growth it&#39;s giving me. I&#39;ve got an appointment this week to get fitted for new shoes/insoles so maybe I&#39;ll write about that process next!&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Chia Network plotting &amp; farming</title>
    <link href="https://marknotfound.com/posts/chia-plotting-and-farming/"/>
    <updated>2021-05-12T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/chia-plotting-and-farming/</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.chia.net/&quot;&gt;Chia Network&lt;/a&gt; is a newer blockchain and smart transaction platform that aims to be greener, more efficient, and more secure than Bitcoin and Ethereum. It is founded by Brahm Cohen, the inventor of the BitTorrent network. The project is still young - mainnet launched just seven weeks ago on March 19, 2021. Instead of using specialized hardware to &amp;quot;mine&amp;quot; as in Bitcoin or Ethereum, excess storage space is put to work to &amp;quot;farm&amp;quot;. In this post I&#39;ll share some of my thoughts since I started farming Chia.&lt;/p&gt;
&lt;h4&gt;How is Chia different?&lt;/h4&gt;
&lt;p&gt;Bitcoin and Ethereum use a consensus mechanism called Proof of Work (PoW) while Chia uses Proof of Space and Time, which basically means it utilizes excess storage space rather than specialized hardware like GPUs or ASICs. I won&#39;t get too into the details of explaining Chia - they do a fine job of it on their &lt;a href=&quot;https://www.chia.net/faq/&quot;&gt;FAQ&lt;/a&gt; and &lt;a href=&quot;https://www.chia.net/greenpaper/&quot;&gt;Green Paper&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;The Basics&lt;/h4&gt;
&lt;p&gt;There are two main components to farming Chia - plotting and farming. Plotting is the act of creating plots which are files that are harvested when farming. Again, I won&#39;t get into the details since you can read about those on Chia&#39;s website if you&#39;re interested. Basically plots take time + resources to create, and more plots equals more opportunities to win a block and thus earn the block reward of 2 &lt;a href=&quot;https://www.coingecko.com/en/coins/chia&quot;&gt;XCH&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Farming is simply the act of listening to challenges broadcast by the blockchain and checking the plots for a solution, thus farming is extremely light on energy consumption. You can easily farm using a Raspberry Pi.&lt;/p&gt;
&lt;h4&gt;My Setup&lt;/h4&gt;
&lt;p&gt;I&#39;ve adapted my gaming PC to plot more efficiently, and am using external drives to hold the plots. My plotting/gaming PC&#39;s specs are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: AMD Ryzen 7 3700X 8C16T&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Boot Drive&lt;/strong&gt;: Samsung 970 EVO PLUS M.2 1TB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plot Drive&lt;/strong&gt;: Intel S4610 960GB Enterprise SSD&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Farm Drives&lt;/strong&gt;: Assorted externals totaling ~20TB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: G.SKILL Ripjaws V 2x16GB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PSU&lt;/strong&gt;: EVGA SuperNOVA 850 G+&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GPU&lt;/strong&gt;: Radeon RX 580 (Not relevant for Chia)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Performance&lt;/h4&gt;
&lt;p&gt;Plotting under Windows 10 as I&#39;m doing suffers ~10% slower plotting times. Still, with this rig I can get about four plots running in parallel staggering them at about 360 minutes (6 hours). With this offset strategy, I can pump out about 2 plots every six hours or so with two queues plotting onto the Intel S4610 SSD. I&#39;ve found 4GB of RAM and 3 CPU threads per plot works well enough for now with this setup.&lt;/p&gt;
&lt;h4&gt;Future Improvements&lt;/h4&gt;
&lt;h5&gt;Storage&lt;/h5&gt;
&lt;p&gt;I&#39;ve just ordered a new 1TB SSD which will replace the M.2 drive as my boot drive. I&#39;ll dual boot Windows/Ubuntu on the SSD and start plotting to the M.2. The Samsung 970 EVO doesn&#39;t have the highest endurance however so it will eventually fail. Until then I should be able to almost double my plot output.&lt;/p&gt;
&lt;h5&gt;Raspberry Pi Farm&lt;/h5&gt;
&lt;p&gt;I have a Raspberry Pi 4 ready to be set up as a dedicated farmer. This will lower power consumption as I won&#39;t have to run my PC full time once plots are completed. The RPi 4 has four USB ports, so I&#39;ll be able to connect at least 4 external drives to it as farm storage, but may also boost that number with USB splitters.&lt;/p&gt;
&lt;h5&gt;Linux&lt;/h5&gt;
&lt;p&gt;As mentioned, Windows is slower to plot than Linux/MacOS, so I&#39;ll be installing Ubuntu on a partition and plotting there. I&#39;ve not done much scientific benchmarking, but once I cut over to Linux I&#39;ll likely set up some more monitoring around things to better understand what is working and what isn&#39;t.&lt;/p&gt;
&lt;h5&gt;Staging Drive&lt;/h5&gt;
&lt;p&gt;Because the farm drives are slow spinning disks, transferring plots to them is slow. Each plot is 108.8GB so takes 20+ minutes just to transfer the plot once it&#39;s done being created on the plot drive. To unblock the plot drives, I plan to install a cheap SSD where plots will be copied to once they&#39;re complete. Then I&#39;ll set up a job to move them from staging to their final destination on the slow farm drives.&lt;/p&gt;
&lt;h4&gt;Return on Investment&lt;/h4&gt;
&lt;p&gt;Some people are investing tens of thousands of dollars in their plotting rigs. Who knows - maybe they will recoup that cost. I already had the gaming PC, so the only investment I made was two drives - an enterprise SSD for plotting and a 14TB external for farming. This amounts to ~$400 total which I have already made back after three weeks of farming. Of couse, not every farmer is as lucky. People on Reddit are regularly posting pictures of their several hundred plot farms where they haven&#39;t won a single block. I am hesitant to invest too deeply, so for now I will just keep plotting with what I have.&lt;/p&gt;
&lt;h4&gt;Random Thoughts&lt;/h4&gt;
&lt;p&gt;It&#39;s been a fun experiment playing with Chia. I&#39;ve never mined a cryptocurrency before, and this one appealed to me because I didn&#39;t need any specialized hardware. Any hardware I decide to purchase for farming Chia in the future can easily be repurposed for other things should I decide to stop farming. More storage is always handy.&lt;/p&gt;
&lt;p&gt;Chia&#39;s also pushed me into the &lt;a href=&quot;https://www.reddit.com/r/homelab/&quot;&gt;Homelab subreddit&lt;/a&gt; which is super interesting and has me considering a home server for running Docker and other services in my own cloud.&lt;/p&gt;
&lt;p&gt;More to come another day :)&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Race Report: Philadelphia Half Marathon 2021</title>
    <link href="https://marknotfound.com/posts/philadelphia-half-marathon-2021/"/>
    <updated>2021-11-24T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/philadelphia-half-marathon-2021/</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://marknotfound.com/posts/running-is-kinda-hard/&quot;&gt;The last time I wrote about running was seven months ago in April 2021.&lt;/a&gt; I had only been running for about eight weeks at that point. My longest run back then was 6.57 miles at a pace of 10:48 min/mile and I&#39;m not even sure I ran the whole thing. Still, I was proud of that and still am! I ran pretty regularly three times a week until July when I went on a five week road trip to Seattle and back (I should write about that next). Turns out running while driving across the country, camping, and staying in the odd La Quinta Inn is tough to maintain.&lt;/p&gt;
&lt;img class=&quot;post-image&quot; alt=&quot;Mark holds up his first half marathon medal in Philadelphia&quot; src=&quot;https://marknotfound.com/img/posts/running/philly-hm-2021.jpg&quot; /&gt;
&lt;p&gt;Once I returned from the road trip it was time to get back on the running train, but this time I was going to take it more seriously.&lt;/p&gt;
&lt;p&gt;I signed up for the JCRR Everybody&#39;s 10k in October, loaded up a new Garmin coach training plan, and got to work. My running schedule was four days a week this time, up from three. Cut to 12 weeks of &amp;quot;easy&amp;quot; runs and speed training and I ran that 10k at 54:22 - well under the goal I had set for sub-60 minutes. But this race report isn&#39;t about that race - it&#39;s about the Philadelphia Half Marathon.&lt;/p&gt;
&lt;p&gt;At Everybody&#39;s 10k, I ended up pacing behind a group of people that I later learned ran with a group called Jersey City Runners (not to be confused with Jersey City &lt;strong&gt;Road&lt;/strong&gt; Runners, the hosts of the race). I had joined the JCR group on Facebook a couple weeks back so I was familiar, but I hadn&#39;t talked with anybody or joined any of their group runs yet for fear I wouldn&#39;t be able to keep up.&lt;/p&gt;
&lt;p&gt;After introducing myself to my unwitting pacers and thanking them, I decided to start signing up for the JCR group runs. Long story short, JCR is amazing and the people in that group have pushed me beyond whatever limits I thought I had. Now I run with them four days a week and I can&#39;t even imagine going back to running solo 😂. Because of them, I signed up for the Philadelphia Half Marathon with just two weeks notice. I knew I had nothing to worry about though - a solid group of JCR friends would be by my side in the half, and others were running in the full. In fact, I ran the half with the same group of people I ran the 10k with!&lt;/p&gt;
&lt;p&gt;The below race report is duplicated from my post on Reddit, so please ignore any repeated info:&lt;/p&gt;
&lt;h3&gt;Race Information&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt; Philadelphia Half Marathon&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Date:&lt;/strong&gt; November 20, 2021&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Distance:&lt;/strong&gt; 13.1 miles&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Location:&lt;/strong&gt; Philadelphia, PA&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strava:&lt;/strong&gt; https://www.strava.com/activities/6283464189&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Website:&lt;/strong&gt; https://www.philadelphiamarathon.com/races/half-marathon/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Time (Official):&lt;/strong&gt; 1:55:47&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Time (Strava):&lt;/strong&gt; 1:54:34&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Goals&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Goal&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Completed?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;Finish and have a nice time&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Yes&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;Sub 2:00:00&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Yes&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;Sub 1:55:00&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Officially no, Strava says yes though ;)&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Splits&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Mile&lt;/th&gt;
&lt;th&gt;Pace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;9:14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;8:04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;8:44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;8:50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;8:41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;8:41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;8:29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8:38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;8:55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9:10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;9:02&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;8:44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;8:31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.26 (Didn&#39;t stop my watch perfectly)&lt;/td&gt;
&lt;td&gt;8:28&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Training&lt;/h3&gt;
&lt;p&gt;No training specific to this event. I only signed up two weeks beforehand because there were a bunch of people from my club running in either the half or full. This was my first half marathon race and only my third race ever since starting running from nothing in March 2021. Weekly sessions were basically 3-4 easy-ish runs per week plus one long run. My weekly mileage is 30-35. I initially wasn&#39;t going to set any time goals on this race, but then the week before the race I ended up doing 13.5 miles on my long run in about 2h 20m very casually so figured getting under 2 hours should be attainable if actually trying.&lt;/p&gt;
&lt;h3&gt;Pre-race&lt;/h3&gt;
&lt;p&gt;Got to Philly early Friday morning. I work remote so finished my work day in the hotel room. I&#39;ve been battling PTT (posterior tibial tendonitis) so taped my legs with KT tape as my PT recommended for this race. Wow! I didn&#39;t think KT tape actually worked but it was like magic. I&#39;m okay if it was just a placebo, but I literally felt none of the pain I normally feel once I had this tape on. It was a miracle. Days later the pain has not resurfaced.&lt;/p&gt;
&lt;p&gt;Woke up for the race Saturday at 5am. Got dressed and did a bunch of stretches. Met with fellow club runners in the lobby at 6am and walked to the race. Got through security quickly without much hassle. Hit the bathroom quick, took a pre-race gel, then into the corral.&lt;/p&gt;
&lt;p&gt;It was pretty cold. I didn&#39;t bring throwaway clothes and it didn&#39;t help that the race started a little over 30 minutes late. I had on wool socks, thermal tights, two long sleeve shirts, one short sleeve shirt, gloves, and a hat. It wasn&#39;t until mile 3 that I was finally warmed up and I could feel my feet again.&lt;/p&gt;
&lt;h3&gt;Race&lt;/h3&gt;
&lt;p&gt;No real strategy going in. I remember telling myself I would start off slow and try to get negative splits.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Miles 1-6&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Negative split plan immediately went out the window, and I accidentally ran my second mile way too fast at an 8:04 pace. I was happy to have banked some time though and was feeling strong. I popped a gel every 3 miles. This is more often than most people I know, but it works well for me and prevents headaches I sometimes get at the end of a run.&lt;/p&gt;
&lt;p&gt;I didn&#39;t check the course map really so was pretty surprised by the rolling hills starting around mile 4. Whatever. I powered through and maintained a pace consistently faster than my target. I took full advantage of the downhills to recover letting gravity do the work.&lt;/p&gt;
&lt;p&gt;Mile 6ish I saw a group friends from my local running club cheering. I yelled to them and they yelled/waved back and it felt good to get some free energy! Then another half mile down, I was surprised to see my girlfriend on the side cheering me on. She said she would meet me at the finish, so I was not expecting to see her until then. She gave me a huge boost of energy and my eyes teared up a little from the excitement 😍.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Miles 6-11&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;More hills and they felt like they were getting steeper. Still felt pretty strong and continued to power through them hitting some nice 8:30 and below miles here and there. Things got slower around 10 and 11 (9:05ish pace) when I started really feeling the hills.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Miles 11-13.1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Started suffering here - this was the fastest I had ever done a run this long and I was starting to feel it. The last mile in particular was a pretty steady incline which I didn&#39;t realize at the time. It just felt hard and I couldn&#39;t pinpoint why until I checked the elevation on Strava after. I recall grunting and groaning (ok and maybe cursing a little) just knowing it would be over soon and I only had to push a little longer to get to the finish.&lt;/p&gt;
&lt;h3&gt;Post-race&lt;/h3&gt;
&lt;p&gt;Finished strong and immediately got some food in me. A banana, two granola bars, liter of water with two Nuun tablets in it, etc. Checked Strava and saw I beat 1:55:00, then saw the official result telling me I actually did not beat 1:55:00. Overall I&#39;m happy with how things went down and I am proud of my performance. During this race I also set new PRs for the 5k (26:37) and 10k (53:18) distances which was a nice bonus.&lt;/p&gt;
&lt;p&gt;I learned a lot about how the bigger races operate. Next time I&#39;ll be prepared with throw away clothes and more training. Immediately after the race I questioned if I wanted to keep doing races like this, but those nasty thoughts were gone in a couple hours when I started looking forward to the next time :)&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Building RunDash - Part 1 of ?</title>
    <link href="https://marknotfound.com/posts/building-rundash-part-1/"/>
    <updated>2022-08-09T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/building-rundash-part-1/</id>
    <content type="html">&lt;p&gt;Over the last year, I&#39;ve had a lot of fun tracking my progress with Garmin Connect and Strava. They expose tons of data points about each run - pace, distance, heart rate, elevation gain, cadence, etc. These tools are amazing. Strava is a great social network where my friends and I can congratulate eachother after races or particularly grueling workouts. Garmin provides insights into how training is going. Who doesn&#39;t love seeing a chart with a positive trend?&lt;/p&gt;
&lt;p&gt;However, I sometimes feel these platforms cater to an athlete who is more interested in min/maxing their performance through data insights. There is nothing wrong with this of course, but &lt;em&gt;I am not trying to compete at a high level.&lt;/em&gt; If you are not interested in utilizing it, then too much data or too fine data is just noise. I&#39;m a middle of the pack runner and perfectly content to hang out there. So which metrics - at a high level - show me how I&#39;m improving? What I want is to quantitatively answer the questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Am I running more often?&lt;/li&gt;
&lt;li&gt;Am I running longer?&lt;/li&gt;
&lt;li&gt;Am I running a little faster this year compared to last?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While those questions are likely answerable with Garmin and Strava if you dig a little bit, I wanted something that put those insights right infront of my face. &lt;a href=&quot;https://rundashapp.com/&quot;&gt;&lt;em&gt;Enter RunDash&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;RunDash - A One Man Product (for now)&lt;/h5&gt;
&lt;img class=&quot;post-image&quot; src=&quot;https://marknotfound.com/img/posts/rundash/bkm-22-dashboard.png&quot; alt=&quot;A screenshot of RunDash displaying charts for a marathon training block&quot; /&gt;
&lt;a href=&quot;https://rundashapp.com/&quot;&gt;RunDash&lt;/a&gt; aims to answer those questions very simply by displaying key metrics on a fixed set of charts. You can log in, glance at your data and log off. You can tag runs however you want and filter on those tags to see trends. I like to tag runs by training block. So I tagged all of my training runs for the 2022 Brooklyn Marathon as &quot;BKM &#39;22&quot;. Now I can filter the metrics by that tag and see how my training progressed for that specific block.
&lt;p&gt;All of the data comes from Strava, which is the only way to log into the application.&lt;/p&gt;
&lt;h5&gt;Infrastructure&lt;/h5&gt;
&lt;p&gt;RunDash is hosted on Heroku. I&#39;ve not really used Heroku before this for any sort of &amp;quot;real&amp;quot; project. People claim it is expensive, but it allows me to get started for free/cheap and is basically ops team as a service. After upgrading to all paid services (one web dyno, one worker dyno, postgres) the total cost is $24/month. That&#39;s cheap operations.&lt;/p&gt;
&lt;p&gt;For example, after opening signups to my local run club I quickly began to exceed the limits of the free postgres tier. Migrating to a paid postgres tier required less than 2 minutes of down time and running just a few CLI commands. Enter maintenance mode (provided by Heroku), create the new postgres instance, copy the data over, swap the new postgres credentials into an environment variable, leave maintenance mode. Very quick and easy.&lt;/p&gt;
&lt;h5&gt;Backend&lt;/h5&gt;
&lt;p&gt;The app is running on a familiar Django + gunicorn + celery + postgres stack. One of the goals of this project is to use and better learn Django best practices, so I am trying to take advantage of all it has to offer. Off the shelf authentication, templating system, unit testing tooling, etc.&lt;/p&gt;
&lt;p&gt;Heroku handles crons via their scheduler addon. Crons are implemented as Django management commands.&lt;/p&gt;
&lt;p&gt;Celery handles background tasks like importing activities from Strava or syncing up with incoming webhooks.&lt;/p&gt;
&lt;h5&gt;Frontend&lt;/h5&gt;
&lt;p&gt;While I&#39;m perfectly capable of building a React app from scratch, I didn&#39;t want the complexity that comes with building/maintaining a React app. After all, this is (for now) a solo project. It doesn&#39;t make money (it loses exactly $24/month), so I want building it to spark some joy in my life. I learned about &lt;a href=&quot;https://htmx.org/&quot;&gt;HTMX&lt;/a&gt; on Reddit and it seemed like an interesting tool. It&#39;s a very small JS library that lets you add HTML attributes to trigger XHR requests based on events. This means you can build a dynamic single page app &lt;em&gt;without writing any JS&lt;/em&gt;. In fact, &lt;em&gt;there is zero custom JS in RunDash&lt;/em&gt;. An event on the frontend triggers an API call and, instead of the server responding with JSON, it responds with an HTML fragment which HTMX then swaps into the DOM. It&#39;s lightweight, fast, and simple. &lt;em&gt;chef kiss&lt;/em&gt; 👨‍🍳 More on HTMX in a follow up post.&lt;/p&gt;
&lt;p&gt;The UI is built with &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap 5&lt;/a&gt; and a simple &lt;a href=&quot;https://bootswatch.com/yeti/&quot;&gt;off the shelf theme&lt;/a&gt;. In an effort to keep things simple and reduce complexity, &lt;em&gt;there is zero custom CSS&lt;/em&gt;. With this self-imposed constraint the product and UI stays a little simpler. After all, I&#39;m not a designer. To some degree, it is best to use what Booststrap prescribes. The theme is admittedly not the prettiest or most modern, so this will be the first thing to go if/when I get more resources 😂.&lt;/p&gt;
&lt;h5&gt;Charting&lt;/h5&gt;
&lt;p&gt;Charting is done using &lt;a href=&quot;https://www.chartjs.org/&quot;&gt;Chart.js&lt;/a&gt;. Again one of the goals of this project is to keep it as simple as possible. Chart.js is very quick and easy to use. For now, it fits what the product sets out to do.&lt;/p&gt;
&lt;h5&gt;Up Next&lt;/h5&gt;
&lt;p&gt;I have more plans for RunDash and hope to eventually turn it into a microbusiness of sorts. I&#39;m not sure what that means yet. Follow up posts will dive more into technical details, marketing, and business efforts.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Building RunDash - Django + HTMX</title>
    <link href="https://marknotfound.com/posts/building-rundash-django-htmx/"/>
    <updated>2022-08-29T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/building-rundash-django-htmx/</id>
    <content type="html">&lt;p&gt;One of my guiding principles behind &lt;a href=&quot;https://rundashapp.com/&quot;&gt;RunDash&lt;/a&gt;&#39;s tech stack is that it should be kept as simple as possible. It is meant to return to a simpler time in web development before single page applications or microservices. That isn&#39;t to say it isn&#39;t modern though. While &lt;a href=&quot;https://rundashapp.com/&quot;&gt;RunDash&lt;/a&gt; is not technically a single page application, full page loads are rare. You will not find webpack or React or babel in the &lt;code&gt;packages.json&lt;/code&gt;. And while it isn&#39;t powered by a dozen microservices, it is powered by half a dozen Django apps (more if you count dependencies) in a monolith. Django + HTMX has been a powerful combination helping things get done quickly and easily.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://rundashapp.com/&quot;&gt;RunDash&lt;/a&gt; has only five JS dependencies at the time of writing and three of them are bootstrap related. The other two are &lt;a href=&quot;https://www.chartjs.org/&quot;&gt;ChartJS&lt;/a&gt; and &lt;a href=&quot;https://htmx.org/&quot;&gt;HTMX&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is nothing particularly special about the combination of Django + HTMX. You could likely pair HTMX with any full featured backend framework like Laravel or Rails or Express and get just as much done. This post is more about the zen of developing a modern web application without writing any JS, and for &lt;a href=&quot;https://rundashapp.com/&quot;&gt;RunDash&lt;/a&gt; that means Django + HTMX.&lt;/p&gt;
&lt;p&gt;Disclaimer: This is not intended to be a full Django + HTMX tutorial, but rather showing off how they are used in &lt;a href=&quot;https://rundashapp.com/&quot;&gt;RunDash&lt;/a&gt;. Some examples below are off the top of my head and may not be fully functional code.&lt;/p&gt;
&lt;h3&gt;HTMX&lt;/h3&gt;
&lt;p&gt;HTMX works by listening to events in the DOM and reacting to them by calling an API and swapping the response body (which is HTML) in place of a specified element. This sounds complicated, but a naive example might look like this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-get&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/api/form/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#form-container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-trigger&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;click&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  Load Form&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the above example, clicking the button would trigger a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/api/form/&lt;/code&gt; and place the HTML from the response inside of &lt;code&gt;#form-container&lt;/code&gt;. This is a simplified example. You could also do something more complex like submit an HTML form using a PATCH request to update some data:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-patch&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/api/users/123/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;last_name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;submit&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Update&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Django + HTMX&lt;/h3&gt;
&lt;p&gt;Things get interesting when you begin mixing Django templates with HTMX. All of a sudden, something complicated like server rendered infinite scroll is just a few lines of code away. The following example is nearly identical to how &lt;a href=&quot;https://rundashapp.com/&quot;&gt;RunDash&lt;/a&gt;&#39;s activity infinite scroll works:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- rendered by some initial page load view --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;activity-list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-trigger&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-get&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/api/activities/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-swap&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;innerHTML&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First, we create a &lt;code&gt;div&lt;/code&gt; that makes a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/api/activities/&lt;/code&gt; when the page finishes loading. This API returns the first page of activities to display. In Django, a class-based view is implemented to look like:&lt;/p&gt;
&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# views.py&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; django&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;views&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;generic &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; ListView&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ActivityListView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ListView&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Activity&lt;br /&gt;    paginate_by &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt;&lt;br /&gt;    template_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;activities.html&quot;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_queryset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Activity&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;objects&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# urls.py&lt;/span&gt;&lt;br /&gt;urlpatterns &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;api/activities/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ActivityListView&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;as_view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And last but not least, the Django template is something like this:&lt;/p&gt;
&lt;pre class=&quot;language-django&quot;&gt;&lt;code class=&quot;language-django&quot;&gt;&lt;span class=&quot;token django language-django&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;activity&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;activities&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;activity&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token django language-django&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;forloop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;page_obj&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;has_next&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;hx-get&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/api/activities/?page=&lt;span class=&quot;token django language-django&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;page_obj&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;next_page_number&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;}}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;hx-trigger&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;revealed&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;hx-swap&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;afterend&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token django language-django&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token django language-django&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;}}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token django language-django&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the above template, when the loop is on its final iteration we add some HTMX to the &lt;code&gt;div.activity&lt;/code&gt; element:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hx-get&lt;/code&gt; is set to the endpoint with next page number in the query params&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hx-trigger&lt;/code&gt; is set to &lt;code&gt;revealed&lt;/code&gt; which triggers the request when that element appears in the viewport&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hx-swap&lt;/code&gt; is set to &lt;code&gt;afterend&lt;/code&gt; to append the results after that element&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now when the user scrolls to the end of the activity list, the last element comes into view and triggers the request to load the next page of results which is then appended to the list. Nice.&lt;/p&gt;
&lt;h3&gt;Forms + HTMX&lt;/h3&gt;
&lt;p&gt;If we combine the two examples above, it becomes trivial to add filtering to a list of model instances.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;activity-filters&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-get&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/api/activities/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;hx-target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#activity-list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;pace&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;submit&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Submit&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;activity-list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;hx-get&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/api/activities/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;hx-include&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#activity-filters&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;hx-trigger&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;hx-swap&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;innerHTML&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the above example, &lt;code&gt;#activity-list&lt;/code&gt; will load the first page of activity results including any values set in the &lt;code&gt;#activity-filters&lt;/code&gt; form in the query string. When the &lt;code&gt;#activity-filters&lt;/code&gt; form is submitted, it will trigger a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/api/activities/&lt;/code&gt; with form values included in the query string, so &lt;code&gt;GET /api/activities/?pace=&lt;/code&gt; or, if there is a value set, &lt;code&gt;GET /api/activities/?pace=10&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Wrapping Up&lt;/h3&gt;
&lt;p&gt;So we can see Django + HTMX is a powerful combination. Modern interactive web applications &lt;em&gt;are possible&lt;/em&gt; without writing massive React apps. That is not to suggest React is bad or shouldn&#39;t be used, only that there are always other ways of doing things.&lt;/p&gt;
&lt;h3&gt;Questions?&lt;/h3&gt;
&lt;p&gt;Reach out over &lt;a href=&quot;mailto:mark@meltdownlabs.com?subject=Django%20+%20HTMX&quot;&gt;email&lt;/a&gt; or one of the other social links here with questions or to tell me I am wrong about something. 😀&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Reverse engineering Linear&#39;s sync magic</title>
    <link href="https://marknotfound.com/posts/reverse-engineering-linears-sync-magic/"/>
    <updated>2022-12-20T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/reverse-engineering-linears-sync-magic/</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://linear.app/&quot; target=&quot;_blank&quot;&gt;Linear&lt;/a&gt; is an issue tracker and project management tool for software engineering teams. This is an oversimplification, &lt;a href=&quot;https://linear.app/releases/2022&quot; target=&quot;_blank&quot;&gt;especially given their ambitions to be much more than that&lt;/a&gt;, but it’s enough to provide some context.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 2023-02-23&lt;/strong&gt;: I recently came across a talk given by Tuomas Artman on exactly how their sync works. It is from 2020 so may not be exactly how it still works, but it&#39;s likely still relevant:&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/WxK11RsLqp4?start=2175&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://www.figma.com/blog/how-figmas-multiplayer-technology-works/&quot;&gt;He also points to a blog post from Figma which works similarly.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Why?&lt;/h3&gt;
&lt;p&gt;I recently signed up for Linear to try it out and see how it was. Immediately I noticed how fast and responsive it felt. Every interaction was instant. It is a breath of fresh air after struggling with other similar and slower tools which I won’t name specifically. I was curious how they were doing things, so first I tried Googling to find their tech stack. I found the &lt;a href=&quot;https://twitter.com/artman/status/1119046856317652992&quot;&gt;following tweet from 2019 by Tuomas Artman, Linear&#39;s co-founder&lt;/a&gt; in response to somebody asking how they were building:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;A pretty basic stack. React, MobX, Typescript and Node with PostgreSQL. And some home-made sync magic.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;What exactly is this &amp;quot;home-made sync magic&amp;quot;?&lt;/em&gt; This is the question I seek to answer here, so I opened up Chrome DevTools and dove in. The magic seems to mostly be persisting model snapshots for each create, update, or delete action which they call a &lt;code&gt;SyncAction&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Summary/TLDR&lt;/h3&gt;
&lt;p&gt;Linear stores a copy of most (all?) data locally in IndexedDB and pushes updates over WebSockets. It uses a bootstrap process to get the initial state and then applies changesets as they come (from you or other users in your org) to keep the local copy of data in sync with the server. It is able to apply a range of changesets from one point in time to another using a concept of &lt;code&gt;SyncAction&lt;/code&gt;s.&lt;/p&gt;
&lt;h3&gt;First Bootstrap (Full)&lt;/h3&gt;
&lt;p&gt;Loading Linear App for the first time in a fresh browser (or Incognito) will trigger a request to bootstrap the app with all data it needs to render using their &lt;code&gt;/sync/bootstrap&lt;/code&gt; endpoint. This endpoint accepts a &lt;code&gt;type&lt;/code&gt; query parameter which can be &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;partial&lt;/code&gt;, or perhaps other values. This first bootstrap call looks something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /sync/bootstrap?type=full&amp;amp;onlyModels=ApiKey,Attachment,RoadmapToProject,Roadmap,ViewPreferences,CustomView,Cycle,Document,Emoji,IssueImport,Integration,IntegrationResource,IntegrationsSettings,WorkflowState,PushSubscription,NotificationSubscription,Team,Issue,IssueLabel,IssueRelation,ProjectUpdate,OauthClientApproval,Notification,OauthClient,Organization,OrganizationDomain,OrganizationInvite,Project,ProjectLink,ProjectUpdateInteraction,Subscription,TeamKey,TeamMembership,Template,User,UserSettings,Webhook,IntegrationTemplate,WorkflowDefinition,Favorite
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;onlyModels&lt;/code&gt; query parameter lists the models needed to render Linear’s main UI components. Projects, Issues, Teams, etc. So from this bootstrap call, we get the following list of models:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ApiKey&lt;/li&gt;
&lt;li&gt;Attachment&lt;/li&gt;
&lt;li&gt;RoadmapToProject&lt;/li&gt;
&lt;li&gt;Roadmap&lt;/li&gt;
&lt;li&gt;ViewPreferences&lt;/li&gt;
&lt;li&gt;CustomView&lt;/li&gt;
&lt;li&gt;Cycle&lt;/li&gt;
&lt;li&gt;Document&lt;/li&gt;
&lt;li&gt;Emoji&lt;/li&gt;
&lt;li&gt;IssueImport&lt;/li&gt;
&lt;li&gt;Integration&lt;/li&gt;
&lt;li&gt;IntegrationResource&lt;/li&gt;
&lt;li&gt;IntegrationsSettings&lt;/li&gt;
&lt;li&gt;WorkflowState&lt;/li&gt;
&lt;li&gt;PushSubscription&lt;/li&gt;
&lt;li&gt;NotificationSubscription&lt;/li&gt;
&lt;li&gt;Team&lt;/li&gt;
&lt;li&gt;Issue&lt;/li&gt;
&lt;li&gt;IssueLabel&lt;/li&gt;
&lt;li&gt;IssueRelation&lt;/li&gt;
&lt;li&gt;ProjectUpdate&lt;/li&gt;
&lt;li&gt;OauthClientApproval&lt;/li&gt;
&lt;li&gt;Notification&lt;/li&gt;
&lt;li&gt;OauthClient&lt;/li&gt;
&lt;li&gt;Organization&lt;/li&gt;
&lt;li&gt;OrganizationDomain&lt;/li&gt;
&lt;li&gt;OrganizationInvite&lt;/li&gt;
&lt;li&gt;Project&lt;/li&gt;
&lt;li&gt;ProjectLink&lt;/li&gt;
&lt;li&gt;ProjectUpdateInteraction&lt;/li&gt;
&lt;li&gt;Subscription&lt;/li&gt;
&lt;li&gt;TeamKey&lt;/li&gt;
&lt;li&gt;TeamMembership&lt;/li&gt;
&lt;li&gt;Template&lt;/li&gt;
&lt;li&gt;User&lt;/li&gt;
&lt;li&gt;UserSettings&lt;/li&gt;
&lt;li&gt;Webhook&lt;/li&gt;
&lt;li&gt;IntegrationTemplate&lt;/li&gt;
&lt;li&gt;WorkflowDefinition&lt;/li&gt;
&lt;li&gt;Favorite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;/sync/bootstrap&lt;/code&gt; endpoint returns a &lt;code&gt;text/plain&lt;/code&gt; content type. The body consists of multiple lines, each in the shape of &lt;code&gt;ModelName=&amp;lt;JSON representation of model&amp;gt;&lt;/code&gt;. For example, a response representing 3 &lt;code&gt;Issue&lt;/code&gt;s might look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Issue={&amp;quot;id&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2022-12-20T02:34:01.396Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2022-12-20T02:43:40.348Z&amp;quot;,&amp;quot;number&amp;quot;:20,&amp;quot;title&amp;quot;:&amp;quot;Test1&amp;quot;,&amp;quot;priority&amp;quot;:0,&amp;quot;boardOrder&amp;quot;:0,&amp;quot;sortOrder&amp;quot;:-9014,&amp;quot;labelIds&amp;quot;:[],&amp;quot;teamId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;projectId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;subscriberIds&amp;quot;:[&amp;quot;****&amp;quot;],&amp;quot;previousIdentifiers&amp;quot;:[],&amp;quot;creatorId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;stateId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;parentId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;subIssueSortOrder&amp;quot;:8064.65}
Issue={&amp;quot;id&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2022-12-20T02:21:59.970Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2022-12-20T02:43:40.376Z&amp;quot;,&amp;quot;number&amp;quot;:19,&amp;quot;title&amp;quot;:&amp;quot;Test2&amp;quot;,&amp;quot;priority&amp;quot;:0,&amp;quot;boardOrder&amp;quot;:0,&amp;quot;sortOrder&amp;quot;:-7930,&amp;quot;labelIds&amp;quot;:[],&amp;quot;teamId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;projectId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;subscriberIds&amp;quot;:[&amp;quot;****&amp;quot;],&amp;quot;previousIdentifiers&amp;quot;:[],&amp;quot;creatorId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;stateId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;parentId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;subIssueSortOrder&amp;quot;:7159.96}
Issue={&amp;quot;id&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2022-12-20T02:21:08.526Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2022-12-20T02:43:40.408Z&amp;quot;,&amp;quot;number&amp;quot;:18,&amp;quot;title&amp;quot;:&amp;quot;Test3&amp;quot;,&amp;quot;priority&amp;quot;:0,&amp;quot;boardOrder&amp;quot;:0,&amp;quot;sortOrder&amp;quot;:-6934,&amp;quot;labelIds&amp;quot;:[],&amp;quot;teamId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;projectId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;subscriberIds&amp;quot;:[&amp;quot;****&amp;quot;],&amp;quot;previousIdentifiers&amp;quot;:[],&amp;quot;creatorId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;stateId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;parentId&amp;quot;:&amp;quot;****&amp;quot;,&amp;quot;subIssueSortOrder&amp;quot;:6063.54}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At the end of this list of models is a &lt;code&gt;_metadata_&lt;/code&gt; key which looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;_metadata_={&amp;quot;method&amp;quot;:&amp;quot;postgres&amp;quot;,&amp;quot;lastSyncId&amp;quot;:613955486,&amp;quot;subscribedSyncGroups&amp;quot;:[&amp;quot;***&amp;quot;,&amp;quot;***&amp;quot;],&amp;quot;databaseVersion&amp;quot;:514}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the &lt;code&gt;lastSyncId&lt;/code&gt; value. We will get into this later, but this is how Linear keeps track of data freshness ensuring your local copy of the data is correct.&lt;/p&gt;
&lt;h3&gt;Second Bootstrap (Partial)&lt;/h3&gt;
&lt;p&gt;After the initial bootstrap completes, a second request to &lt;code&gt;/sync/bootstrap/&lt;/code&gt; fires off, this time with &lt;code&gt;type=partial&lt;/code&gt; instead of &lt;code&gt;type=full&lt;/code&gt; and a more limited set of models in the &lt;code&gt;onlyModels&lt;/code&gt; query parameter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comment&lt;/li&gt;
&lt;li&gt;IssueHistory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These models are likely deferred from the first bootstrap since A. there can be multiples of them compared to the # of other models and B. they are less critical to render the page.&lt;/p&gt;
&lt;p&gt;This data is again stored in IndexedDB for fast offline access.&lt;/p&gt;
&lt;h3&gt;Keeping in Sync&lt;/h3&gt;
&lt;h4&gt;WebSockets&lt;/h4&gt;
&lt;p&gt;Every change in Linear appears to result in a new &lt;code&gt;SyncAction&lt;/code&gt; object with a unique ID. For example, creating a comment fires a GraphQL query that looks something like:&lt;/p&gt;
&lt;pre class=&quot;language-graphql&quot;&gt;&lt;code class=&quot;language-graphql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;mutation&lt;/span&gt; &lt;span class=&quot;token definition-mutation function&quot;&gt;CommentCreate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property-query&quot;&gt;commentCreate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token attr-name&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;bodyData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{\&quot;type\&quot;:\&quot;doc\&quot;,\&quot;content\&quot;:[{\&quot;type\&quot;:\&quot;paragraph\&quot;,\&quot;content\&quot;:[{\&quot;type\&quot;:\&quot;text\&quot;,\&quot;text\&quot;:\&quot;Test\&quot;}]}]}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;issueId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;lastSyncId&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that the only requested field in the response is &lt;code&gt;lastSyncId&lt;/code&gt;. This is how most mutations look in Linear.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;SyncAction&lt;/code&gt; appears to have the following schema:&lt;/p&gt;
&lt;pre class=&quot;language-graphql&quot;&gt;&lt;code class=&quot;language-graphql&quot;&gt;&lt;span class=&quot;token property&quot;&gt;id&lt;/span&gt; - &lt;span class=&quot;token property&quot;&gt;int&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;action&lt;/span&gt; - &lt;span class=&quot;token property-query&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token description string&quot;&gt;&quot;&lt;span class=&quot;token language-markdown&quot;&gt;I&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Insert&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token description string&quot;&gt;&quot;&lt;span class=&quot;token language-markdown&quot;&gt;U&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Update&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token description string&quot;&gt;&quot;&lt;span class=&quot;token language-markdown&quot;&gt;D&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Delete&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;token description string&quot;&gt;&quot;&lt;span class=&quot;token language-markdown&quot;&gt;A&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Archive&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;?&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;data&lt;/span&gt; - &lt;span class=&quot;token property&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;modelId&lt;/span&gt; - &lt;span class=&quot;token property-query&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;guid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;modelName&lt;/span&gt; - &lt;span class=&quot;token property&quot;&gt;str&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above mutation results in a WebSocket push from the server which contains an array of &lt;code&gt;SyncAction&lt;/code&gt;s and looks like:&lt;/p&gt;
&lt;pre class=&quot;language-graphql&quot;&gt;&lt;code class=&quot;language-graphql&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;cmd&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;614001964&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;modelName&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Comment&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;modelId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;I&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;userId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;issueId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;bodyData&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{\&quot;type\&quot;:\&quot;doc\&quot;,\&quot;content\&quot;:[{\&quot;type\&quot;:\&quot;paragraph\&quot;,\&quot;content\&quot;:[{\&quot;type\&quot;:\&quot;text\&quot;,\&quot;text\&quot;:\&quot;Test\&quot;}]}]}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;2022-12-20T21:31:55.693Z&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;updatedAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;2022-12-20T21:31:55.693Z&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;reactionData&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;614001967&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;modelName&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Issue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;modelId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;U&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Test1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;teamId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;cycleId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;dueDate&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;stateId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;trashed&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;estimate&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;labelIds&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;parentId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;priority&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;2022-12-20T02:09:39.917Z&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;creatorId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;projectId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;sortOrder&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;81&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;startedAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;updatedAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;2022-12-20T21:31:55.693Z&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;archivedAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;assigneeId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;boardOrder&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;canceledAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;completedAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;snoozedById&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;autoClosedAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;issueImportId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;subscriberIds&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;autoArchivedAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;snoozedUntilAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;sourceMetadata&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;descriptionData&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;previousIdentifiers&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;lastSyncId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;614001969&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;lastSyncId&lt;/code&gt; is again used to communicate to the client if it is out of date or not. If there is a delta between the &lt;code&gt;lastSyncId&lt;/code&gt; and the one stored locally, then this may trigger a…&lt;/p&gt;
&lt;h3&gt;Delta Sync&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;/sync/delta&lt;/code&gt; endpoint accepts at least three query parameters: &lt;code&gt;lastSyncId&lt;/code&gt; and &lt;code&gt;toSyncId&lt;/code&gt;, both representing &lt;code&gt;SyncAction&lt;/code&gt; IDs. This endpoint returns the same shape as the bootstrap endpoint above, but instead returning only &lt;code&gt;SyncAction&lt;/code&gt; objects:&lt;/p&gt;
&lt;pre class=&quot;language-graphql&quot;&gt;&lt;code class=&quot;language-graphql&quot;&gt;&lt;span class=&quot;token property&quot;&gt;SyncAction&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;614004255&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;modelName&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Comment&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;modelId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;D&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;SyncAction&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;614001967&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;modelName&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Issue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;modelId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;U&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Test123&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;teamId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;stateId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;labelIds&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;priority&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2022-12-20T02:09:39.917Z&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;creatorId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;projectId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;sortOrder&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;81&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;updatedAt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2022-12-20T21:31:55.693Z&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;assigneeId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;boardOrder&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;subscriberIds&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;***&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;previousIdentifiers&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;_metadata_&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;syncActionsCount&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;syncActionsSize&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These actions are then replayed locally on IndexedDB and the client is back up to date.&lt;/p&gt;
&lt;h3&gt;MobX Disclaimer&lt;/h3&gt;
&lt;p&gt;Tuomas mentions they use MobX. I&#39;m not primarily a frontend engineer, but from what I can tell MobX is a state management library similar to Redux. I&#39;m not sure exactly how much of what I&#39;m describing here is MobX (perhaps MobX can use IndexedDB as its data store?) versus some special handling by Linear&#39;s engineering team.&lt;/p&gt;
&lt;h3&gt;Final Thoughts&lt;/h3&gt;
&lt;p&gt;These are just my guesses as to how their system works. I&#39;m making assumptions based on what I could see in Chrome DevTools by observing HTTP requests and WebSocket messages. I would be happy for an engineer at Linear to reach out and explain to me how reality differs from what I&#39;ve described here ;)&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>How to disable GraphQL introspection in Graphene</title>
    <link href="https://marknotfound.com/posts/disable-graphql-introspection-graphene/"/>
    <updated>2023-02-16T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/disable-graphql-introspection-graphene/</id>
    <content type="html">&lt;p&gt;Introspection in GraphQL allows an attacker to learn everything about your API&#39;s schema including queries, mutations, types, fields, and directives. It is therefore important to disable introspection on production GraphQL APIs.&lt;/p&gt;
&lt;h3&gt;Background&lt;/h3&gt;
&lt;p&gt;When searching Google for how to tackle disabling introspection in &lt;a href=&quot;https://github.com/graphql-python/graphene&quot;&gt;Graphene&lt;/a&gt;, the top results recommend a custom middleware approach. However, this isn&#39;t very efficient since GraphQL middlewares run for every field in a given operation. If you have any queries with a subtantial amount of fields, it&#39;s just a waste of time to check for introspection on every single field to be resolved.&lt;/p&gt;
&lt;h3&gt;The Graphene/GraphQL Way&lt;/h3&gt;
&lt;p&gt;There is a simpler way and it involves GraphQL validation rules. &lt;a href=&quot;https://docs.graphene-python.org/en/latest/execution/queryvalidation/#disable-introspection&quot;&gt;In fact, Graphene has a section of their docs showing exactly how to do it this way, but it&#39;s at the bottom of Google.&lt;/a&gt; If you want, you can stop reading this and just click that link. I won&#39;t be offended.&lt;/p&gt;
&lt;p&gt;Graphene ships with a validation rule &lt;code&gt;DisableIntrospection&lt;/code&gt;. This can be passed to the schema validator like this:&lt;/p&gt;
&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; graphql &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; validate&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; graphene&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;validation &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; DisableIntrospection&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; my_graphql &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; schema&lt;br /&gt;&lt;br /&gt;errors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; validate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  schema&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;schema&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  rules&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DisableIntrospection&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;With Django&lt;/h3&gt;
&lt;p&gt;In my case, I&#39;m using a custom view for the GraphQL endpoint which inherits from &lt;code&gt;graphene_django.views.GraphQLView&lt;/code&gt; and happens to override &lt;code&gt;GraphQLView.execute_graphql_request&lt;/code&gt; which in turn calls &lt;code&gt;validate&lt;/code&gt;. I only want to disable introspection in production, so to conditionally apply the &lt;code&gt;DisableIntrospection&lt;/code&gt; rule I use a partial:&lt;/p&gt;
&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; functools &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; partial&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; graphql &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; validate&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; graphene&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;validation &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; DisableIntrospection&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; graphene_django&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;views &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; GraphQLView&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; django&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conf &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; settings&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; settings&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;PRODUCTION&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;  validate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; partial&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    validate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    rules&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DisableIntrospection&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyGraphQLView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;GraphQLView&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;execute_graphql_request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;kwargs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;# ...&lt;/span&gt;&lt;br /&gt;    errors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; validate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;schema&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;graphql_schema&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      document&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;# ...&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;schema&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;execute&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&#39;s it. No middlewares required. Go forth and lock down your GraphQL APIs!&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>I guess I&#39;m full-stack now</title>
    <link href="https://marknotfound.com/posts/i-guess-im-fullstack-now/"/>
    <updated>2023-02-22T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/i-guess-im-fullstack-now/</id>
    <content type="html">&lt;p&gt;Approximately 5 minutes ago I had the epiphany that I&#39;m full-stack now. I&#39;ve always considered myself a backend guy. But it sort of all at once just dawned on me that I&#39;ve been doing full-stack for over 3 years now from UIs in React to REST/GraphQL APIs to even some infrastructure.&lt;/p&gt;
&lt;p&gt;I&#39;m not really sure how it happened. I suppose I started my career in 2012 as a &amp;quot;Web Developer&amp;quot;. Maybe I &lt;em&gt;started&lt;/em&gt; as full-stack? After all back then I was writing HTML, CSS, vanilla JS, and PHP. That was full-stack right?&lt;/p&gt;
&lt;p&gt;But then in 2013 I shifted to the backend pretty exclusively focusing on REST APIs and then microservices around 2015 (a.k.a. smaller REST APIs). Then in 2019 I did a (very) short stint with gRPC services in Go and Python. None of that was full-stack to be certain. I didn&#39;t touch React or Vue or really any JavaScript. I just had clients who consumed my services and many of them sat 10 feet away at a different desk. If you put me in the middle of a React component I would have had to restart my laptop just to escape.&lt;/p&gt;
&lt;p&gt;Then in 2020 I joined a startup as the third (fourth kind of?) engineer where I&#39;m still at today. And now I regularly carry out full features from UI to API to infra (if needed). React doesn&#39;t scare me, though it used to. I feel fine in it. Like floating in a weird luke warm swimming pool.&lt;/p&gt;
&lt;p&gt;Up until 8 minutes ago I considered myself a backend engineer. I&#39;m not really though. Not anymore anyway. I&#39;m a full-stack engineer and it wasn&#39;t a choice. It just sort of happened.&lt;/p&gt;
&lt;p&gt;So if you need me I&#39;ll be over here doing whatever it is I do which is a little bit of everything it turns out.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>You don&#39;t have to be curious, but it sure is nice</title>
    <link href="https://marknotfound.com/posts/its-nice-to-be-curious/"/>
    <updated>2023-04-07T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/its-nice-to-be-curious/</id>
    <content type="html">&lt;p&gt;In the software biz you don&#39;t have to be curious, but it sure is nice. It&#39;s important to understand the systems and constraints that we work in. There&#39;s often a lot of moving parts, and having a mental model of those moving parts when you&#39;re building is critical. How do you do it?&lt;/p&gt;
&lt;p&gt;Sure, you might sit down and read all the documentation, all the manuals, all at once. If you&#39;re very academic, this might work for you. I dropped out of community college not once, but twice. The academic style does not work for me. If you&#39;re working in an existing system you might not read the documentation at all. You may just absorb information from existing examples in a code base. Perhaps there is no documentation.&lt;/p&gt;
&lt;p&gt;But another way is to be curious.&lt;/p&gt;
&lt;p&gt;Let&#39;s say you&#39;re working in a framework - maybe Django or Laravel or Rails. The beauty of a framework is that &lt;em&gt;you don&#39;t need to know how it works&lt;/em&gt;. It offers you nice abstractions so you don&#39;t need to worry about how to route an HTTP request or how to serialize a database model to JSON. That&#39;s great for getting moving quickly. However as a system grows, it sometimes outgrows the framework unless you&#39;ve very dilligently worked to that framework&#39;s principles and constraints in which case... very impressive work, maybe this post isn&#39;t for you.&lt;/p&gt;
&lt;p&gt;You will need to begin making choices about that system&#39;s design and that is when the real power comes from not just understanding how to use your tools, but how and why your tools work.&lt;/p&gt;
&lt;p&gt;So be curious. Review code from engineers more senior than you. Review code from engineers less senior than you. Ask questions and understand why they are doing something the way they are. What&#39;s that function do? What&#39;s the difference between a &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt;? Read GitHub issues on packages that you use. Right click a framework class/function and &lt;code&gt;Go to Definition&lt;/code&gt;. Toss yourself into unfamiliar waters, you will float eventually.&lt;/p&gt;
&lt;p&gt;The best part about being curious is that learning becomes a game. You pull on a thread wondering what it will lead to. Keep pulling the thread. It&#39;s okay to not understand every single thing you come across. Read it anyway. It will eventually connect to something else you read later and you&#39;ll have a nice &amp;quot;A-ha!&amp;quot; moment.&lt;/p&gt;
&lt;p&gt;When curiosity wanes, the job becomes rote and boring. If this happens, maybe you&#39;re burnt out. I think this happens to a lot of software engineers who work full time jobs but then also explore tech often in their free time. It&#39;s okay to switch gears and go for a walk or bike ride or something. The curiosity will come back.&lt;/p&gt;
&lt;p&gt;You don&#39;t have to be curious, but it sure is nice.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Building just because (a.k.a. The Khakis.zip Origin Story)</title>
    <link href="https://marknotfound.com/posts/building-just-because-khakis/"/>
    <updated>2023-05-22T00:00:00Z</updated>
    <id>https://marknotfound.com/posts/building-just-because-khakis/</id>
    <content type="html">&lt;p&gt;I&#39;ve been building software professionally for over 10 years now. I started when I was young, maybe 13 or something. I&#39;m 32 now so I&#39;ve been writing code in some for or another for most of my life. When I was a kid it was fun and creative. I just made whatever websites I felt like, eventually making websites for Counter Strike clans or World of Warcraft guilds.&lt;/p&gt;
&lt;p&gt;None of that was really for profit and didn&#39;t &amp;quot;provide business value&amp;quot; which is what software engineers do in this biz. But building stuff is fun. Starting new projects is fun. Not caring about priorities or KPIs or OKRs is fun. So now I&#39;m going back to my roots and building shit just because it&#39;s fun to build shit.&lt;/p&gt;
&lt;p&gt;That is where &lt;a href=&quot;https://khakis.zip/&quot;&gt;khakis.zip&lt;/a&gt; comes in.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://khakis.zip/&quot;&gt;Khakis.zip&lt;/a&gt; started last week because I wanted to buy a &lt;code&gt;.zip&lt;/code&gt; domain. &lt;code&gt;.zip&lt;/code&gt; reminded me of &amp;quot;zippers&amp;quot; like on a pair of pants. I thought &lt;code&gt;pants.zip&lt;/code&gt; would be funny but it was like $300. Then I thought &lt;code&gt;shorts.zip&lt;/code&gt; would be funny but it was $150ish. Too expensive for a dumb bit. Then I thought of &lt;code&gt;khakis.zip&lt;/code&gt; which was available for the low low price of just $13. Plus &lt;code&gt;khakis.zip&lt;/code&gt; is way funnier. &lt;a href=&quot;https://en.wikipedia.org/wiki/Inherently_funny_word&quot;&gt;They say &lt;code&gt;K&lt;/code&gt; is the funniest sounding letter and the word &amp;quot;khakis&amp;quot; has it twice.&lt;/a&gt; You just can&#39;t beat that value.&lt;/p&gt;
&lt;p&gt;Next I had to figure out what to do with &lt;a href=&quot;https://khakis.zip/&quot;&gt;khakis.zip&lt;/a&gt;. At first I thought I might just move my blog to it, but ultimately decided that I like my blog domain being the same as my Twitter/GitHub handles. So the obvious next idea was to embark on a journey to slowly create a full featured Instagram clone specifically for khakis.&lt;/p&gt;
&lt;p&gt;So far, Khakis has 10 users including myself and fake account I made for Gap (who I personally think should invest).&lt;/p&gt;
&lt;p&gt;We are building a small weird community of khaki enthusiasts. It would be very funny to me if it sticks and grows into literally anything at all, but even if it&#39;s just me on there I&#39;m going to keep building it because it&#39;s fun to build stupid shit.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://khakis.zip/&quot;&gt;Join us over at Khakis.zip. All shapes, sizes, and colors of khakis welcome.&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
</feed>